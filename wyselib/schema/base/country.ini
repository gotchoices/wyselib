#!/usr/bin/tclsh
#include(Copyright)
# Initialize data structures in this directory
package require wylib
package require csv

set cc_url {http://www.andrewpatton.com/countrylist.csv}
set cc_file [file tail $cc_url]

if {[file exists $cc_file]} {
    puts "Using local country list file: $cc_file"
} else {
    puts "Downloading country file from: $cc_url"
    exec wget -q $cc_url
}

if {![file exists $cc_file]} {
    puts "Failed to download country file:$cc_file from: $cc_url"
    exit 1
}

set exlist [sql::qlist "select code from base.country"]
if {[llength $exlist] > 10} {puts "Skipping country initialization"; exit 0}

set lnum 0
set done {}
foreach line [split [read_file $cc_file] "\n"] {
    lassign [csv::split $line] n com_name form_name type sub_type sov capital cur_code cur_name dial_code iso_2 iso_3 iso_n iana
    if {$com_name == {} || $iso_2 == {}} continue
    if {[lcontain $done $iso_2]} {puts "Skipping duplicate: $iso_2 $iso_3 $com_name"; continue}
    if {[llength $dial_code] > 1} {puts "Skipping bad dial code: $dial_code"; continue}
    if {[llength $cur_code] > 1 || $cur_code == {}} {puts "Skipping bad curr code: $cur_code"; continue}
    if {[string length $iana] > 3} {puts "Skipping bad iana code: $iana"; continue}
    if {[string length $cur_code] > 3} {puts "Skipping long cur code: $cur_code"; continue}
    if {$iso_3 == {}} {puts "Skipping blank iso_3 code: $dial_code"; continue}
    lappend done $iso_2
#puts "$com_name $capital $cur_code $cur_name $dial_code $iso_2 $iso_3 $iso_n $iana"
    if {$lnum > 0} {
        lappend qlist "insert into base.country (code,com_name,capital,cur_code,cur_name,dial_code,iso_3,iana) values ('$iso_2','[sql::escape $com_name]','[sql::escape $capital]','$cur_code','[sql::escape $cur_name]','$dial_code','$iso_3','$iana')"
    }
    incr lnum
}

#puts "query:\n[join $qlist ";\n"]"
sql::x [join $qlist ";\n"]
