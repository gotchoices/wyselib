#!/usr/bin/env ruby
# Function to initialize data in the country table
#include(Copyright)
#Get data file using: 
#wget -q http://www.andrewpatton.com/countrylist.csv}

require 'csv'
require 'wyseman'
require 'wyseman/db'

done = []
qlist = []
db = WysemanDB.new();

CSV.parse(File.read('countrylist.csv').scrub) {|row|
  n, com_name, form_name, type, sub_type, sov, capital, cur_code, cur_name, dial_code, iso_2, iso_3, iso_n, iana = row
#p row
  next if com_name == '' || iso_2 == ''
  if done.any? {|w| w == iso_2} 
    STDERR.puts 'Skipping duplicate: ' + iso_2 + ' line:' + n; next
  end
  if dial_code && dial_code.split.length > 1
    dial_code = dial_code.split[0]
    STDERR.puts 'Fudging bad dial code: ' + dial_code + ' line:' + n
  end
  if cur_code && cur_code.split.length > 1
    cur_code = cur_code.split[0]
    STDERR.puts 'Fudging bad currency code: ' + cur_code + ' line:' + n
  end
  if iana && iana.length > 3
    STDERR.puts 'Skipping bad iana code: ' + iana + ' line:' + n; next
  end
  if iana && iana.length > 3
    STDERR.puts 'Skipping bad iana code: ' + iana + ' line:' + n; next
  end
  if !iso_3 || iso_3 == ''
    STDERR.puts 'Skipping blank iso_3 code at line:' + n; next
  end
  if !iso_2 || iso_2 == ''
    STDERR.puts 'Skipping blank iso_2 code: at line:' + n; next
  end
  done << iso_2			#Keep track of what we've done
#p iso_2, com_name  
  qlist << "insert into base.country (code,com_name,capital,cur_code,cur_name,dial_code,iso_3,iana) values ('#{db.e(iso_2)}','#{db.e(com_name)}','#{db.e(capital.to_s)}','#{db.e(cur_code.to_s)}','#{db.e(cur_name.to_s)}','#{db.e(dial_code.to_s)}','#{db.e(iso_3.to_s)}','#{db.e(iana.to_s)}')"
}
#p qlist

db.x qlist.join(";\n")
db.close
