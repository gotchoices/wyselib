#!/usr/bin/tclsh
# Initialize data structures in the account table
#Copyright WyattERP.org; See license in root of this package
#----------------------------------------------------------------
package require wylib
package require csv

#sql::x "select setval('acct.tj_id',	(select coalesce(max(tr_id),   1000)	from acct.tj_hdr));"

set exlist [sql::qlist "select numb from acct.acct"]
debug exlist
if {[llength $exlist] > 10} {puts "Skipping account initialization"; exit 0}

set qlist {}
foreach ln {
   {   {}  b  {Books}				category	}
   {   {}  bs {Balance Sheet}			category	b}
   {   {}  pl {Profit and Loss}			category	b}
   {    1  ast {Assets}				asset		bs}
   {   10  cas  {Current Assets}		asset		ast}
   {  100  chk    {Checking}			asset		cas}
   {  102  sav    {Savings}			asset		cas}
   {  103  sec    {Securities}			asset		cas}
   {  105  acr    {Accounts Receivable}		asset		cas}
   {  106  inv    {Inventory}			asset		cas}
   {  107  wip    {Work in Process}		asset		cas}
   {  108  jip    {Jobs in Process}		asset		cas}
   {  109  pre    {Prepayments}			asset		cas}
   {   15  fas  {Fixed Assets}			asset		ast}
   {  150  cap    {Capital Equipment}		asset		fas}	
   {  152  res    {Real Estate}			asset		fas}
   {  154  lnr    {Loans Receivable}		asset		fas}
   {    2  lia {Liabilities}			liability	bs}
   {   20  cul  {Current Liabilities}		liability	lia}
   {  200  cln    {Credit Line}			liability	cul}
   {  201  acp    {Accounts Payable}		liability	cul}
   {  202  prp    {Payroll Payable}		liability	cul}
   {  203  cmp    {Commissions Payable}		liability	cul}	
   {  204  itp    {Income Tax Payable}		liability	cul}
   {  205  ssp    {Social Security Payable}	liability	cul}
   {  206  mcp    {Medicare Payable}		liability	cul}
   {  207  stp    {Sales Tax Payable}		liability	cul}
   {  208  gap	 {Garnishments Payable}		liability	cul}
   {   25  ltl  {Long Term Liabilities}		liability	lia}
   {  250  eql    {Equipment Loans}		liability	ltl}
   {  251  cal    {Capital Leases}		liability	ltl}
   {  252  rel    {Real Estate Loans}		liability	ltl}
   {  254  lnp    {Loans Payable}		liability	ltl}
   {    3  equ {Equity}				equity		bs}
   {   30  beg  {Beginning Balances}		equity		equ}
   {   32  con  {Contributions}			equity		equ}
   {   34  dis  {Distributions}			equity		equ}
   {   36  mem  {Member Capital}		equity		equ}
   {   38  stk  {Issued Stock}			equity		equ}
   {   39  ret  {Retained Earnings}		equity		equ}
   {    4  inc {Income}				income		pl}
   {   40  sal  {Sales}				income		inc}
   {  400  sjb    {Job Sales}			income		sal}	
   {  401  sjp    {Jip Sales}			income		sal}	
   {  403  sot    {Ots Sales}			income		sal}	
   {  405  ser    {Service}			income		sal}
   {   42  shp  {Shipping Charges}		income		inc}
   {   44  gos  {Gain on Sale of Assets}	income		inc}
   {   45  glt  {LT Capital Gains}		income		inc}	
   {   46  gst  {ST Capital Gains}		income		inc}	
   {    5  exp {Expenses}			expense		pl}
   {   50  cgs  {Cost of Goods Sold}		expense		exp	{gross margin}				}
   {   52  cmg  {Commissions on Gross}		expense		exp	{gross margin after commissions}	}
   {   53  war  {Warranty}			expense		exp	{gross margin after warranty}		}
   {   54  opo  {Operations Overhead}		expense		exp	{EBITDA}				}
   {   56  int  {Interest}			expense		exp	{net margin before depreciation}	}
   {   57  cmn  {Commissions on Net}		expense		exp	{net margin after commissions}		}
   {   58  dep  {Depreciation}			expense		exp	{taxable income}			}
   {   59  tax  {Taxes}				expense		exp	{net income}				}
} {
    lassign $ln numb code name type par descr
    if {[lcontain $exlist $numb]} continue
    if {$numb == {}} {set numb {null}}
    if {$code == {boo}} {set par {null}} else {set par '$par'}
    if {$descr == {}} {set descr {null}} else {set descr "'[sql::escape $descr]'"}
    if {	($numb >= 100 && $numb < 200)	|| 
    		($numb >= 200 && $numb < 300)	|| 
    		($numb >=  30 && $numb < 40)	|| 
    		($numb >= 300 && $numb < 400)	|| 
    		($numb >   40 && $numb <  50)	|| 
    		($numb >= 400 && $numb < 500)	|| 
    		($numb >=  50 && $numb < 600)	} {
        set cont {false}
    } else {
        set cont {true}			;#container only account--no actual entries
    }
    lappend qlist "insert into acct.acct (numb, code, name, type, par, descr, container) values ($numb,'$code','[sql::escape $name]','$type',$par,$descr,'$cont')"
}

puts "query:\n[join $qlist ";\n"]"
sql::x [join $qlist ";\n"]
